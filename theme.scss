// The public colour as variable
@define-color public-color #{hsl(30, 100%, 50%)};

// The colors, included the public one, as sass variables.
// public-colour derives from the variable one and needs
// unquote function to appear as it is in sass
$public-color: unquote("@public-color");

// sass color defined in HSL to simplify variations
$color: hsl(30, 100%, 50%);
$color-hue: 30;
$color-sat: 100%;
$color-lum: 50%;

// The amount of variation is some times different
// in different functions (e.g. lightness wants %, mix wants fractions)
$amount-sass: 15%;
$amount-hsl: $color-lum + 15;
$amount-css: 0.3;


// Mapping sassc to css
@function _($content) {
    @return unquote("#{$content}");
}
@function gtkmix($color1, $color2, $amount) {
    @return unquote("mix(#{$color1}, #{$color2}, #{$amount})");
}
@function lightness($color, $amount) {
    @return gtkmix($color, white, $amount);
}


// Define two labels:
// Expected is the label colored with sass functions
// css is the label colored with CSS functions
label.expected,
label.css,
label.hsl
{
    border: 2px solid $color;
    margin: 20px;
    padding: 20px;
    border-radius: 5px;
}

label.expected {
    background-color: lighten($color, $amount-sass);
    border: 10px solid $color;
}

label.css {
    background-color: lightness($public-color, $amount-css);
    border: 10px solid $public-color;
}

// Using HSL reference, because this is what is the most
// suggested way to tweak colors in CSS.
label.hsl {
    background-color: hsl(30, 100%, $amount-hsl);
    border: 10px solid $color;
}

